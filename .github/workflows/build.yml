name: Go Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: '/home/runner/work/dice_roller/dice_roller/go.mod'

      - name: Install Linux GUI build dependencies
        run: sudo apt-get update && sudo apt-get install -y libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libgl1-mesa-dev xorg-dev

      - name: Get dependencies
        run: go mod tidy

      - name: Build
        if: success()
        run: |
          make build

      - name: Install GitHub CLI
        if: success()
        run: |
          sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        if: success()
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth status

      - name: Get Latest Release Tag and Increment
        run: |
          LATEST_TAG=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          
          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="v1.0.0"
          else
            MAJOR=$(echo "$LATEST_TAG" | cut -d. -f1 | tr -d 'v')
            MINOR=$(echo "$LATEST_TAG" | cut -d. -f2)
            PATCH=$(echo "$LATEST_TAG" | cut -d. -f3)
            PATCH=$((PATCH + 1))
            NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"
          fi
          
          COMMIT_HASH=$(git rev-parse --short HEAD)
          
          gh release create "$NEW_TAG" \
            ./build/ebit-hello \
            --title "$NEW_TAG" \
            --notes "Release created from commit $COMMIT_HASH. This release was automatically generated by GitHub Actions."
